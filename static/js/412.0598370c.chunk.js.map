{"version":3,"file":"static/js/412.0598370c.chunk.js","mappings":"6WAGaA,EAAYC,EAAAA,GAAAA,IAAH,qIAQTC,EAAOD,EAAAA,GAAAA,KAAH,+HAQJE,EAAQF,EAAAA,GAAAA,MAAH,qJAWLG,EAAQH,EAAAA,GAAAA,MAAH,4WAgBLI,EAASJ,EAAAA,GAAAA,OAAH,o5CA2ENK,EAAQL,EAAAA,GAAAA,GAAH,gEAKLM,GAAON,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,iF,4FC9HJQ,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAGtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,OAAV,E,mBCqDjC,EAnDoB,WAClB,IAAMH,GAAWI,EAAAA,EAAAA,IAAYN,GAEvBO,GAAWC,EAAAA,EAAAA,MAkBjB,OACE,UAAC,KAAD,CAAMC,SAjBa,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,OACTC,EAAOF,EAAKE,KAAKC,MACjBC,EAASJ,EAAKI,OAAOD,MAI3B,IAAwB,IAFDb,EAASe,WAAU,SAAAC,GAAO,OAAIA,EAAQJ,OAASA,CAArB,IAEtB,OAAOK,MAAM,GAAD,OAAIL,EAAJ,4BAEvCP,GAASa,EAAAA,EAAAA,IAAW,CAAEN,KAAAA,EAAME,OAAAA,KAE5BJ,EAAKS,OACN,EAGC,WACE,UAAC,KAAD,WAAO,QAEL,SAAC,KAAD,CACEC,KAAK,OACLR,KAAK,OACLS,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,mBAGhB,UAAC,KAAD,WAAO,UAEL,SAAC,KAAD,CACEJ,KAAK,MACLR,KAAK,SACLS,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,qBAIhB,SAAC,KAAD,CAAQJ,KAAK,SAAb,SAAsB,kBAG3B,E,mBCLD,EA1CoB,WAClB,IAAMpB,GAAWI,EAAAA,EAAAA,IAAYN,GACvB2B,GAAcrB,EAAAA,EAAAA,IAAYF,GAE1BG,GAAWC,EAAAA,EAAAA,OAEjBoB,EAAAA,EAAAA,YAAU,WACRrB,GAASsB,EAAAA,EAAAA,MACV,GAAE,CAACtB,IAEJ,IAAMuB,EAAe,SAAApB,GACnBH,GAASwB,EAAAA,EAAAA,IAAcrB,EAAEG,OAAOmB,IACjC,EAYD,OACE,SAAC,KAAD,WAVKL,GAA+B,KAAhBA,EAIbzB,EAAS+B,QAAO,SAAAf,GAAO,OAC5BA,EAAQJ,KAAKoB,cAAcC,SAASR,EAAYO,cADpB,IAHrBhC,GAUakC,KAAI,YAA2B,IAAxBJ,EAAuB,EAAvBA,GAAIlB,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACnC,OACE,UAAC,KAAD,YACE,UAAC,KAAD,WACGF,EAAK,MAAE,0BAAOE,QAEjB,SAAC,KAAD,CAAQM,KAAK,SAASU,GAAIA,EAAIK,QAASP,EAAvC,SAAqD,aAJ5CE,EASd,KAGN,E,SCpBD,EAtBe,WACb,IAAMzB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,WAAO,yBAEL,SAAC,KAAD,CACEc,KAAK,OACLR,KAAK,SACLY,YAAY,qBACZY,SAZS,SAAA5B,GACfH,GAASgC,EAAAA,EAAAA,GAAsC7B,EAAEG,OAAOE,OACzD,QAeF,ECRD,EAZqB,WACnB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAO,qBACP,SAAC,EAAD,KACA,SAAC,KAAD,UAAO,cACP,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/AuthForm/AuthForm.styled.js","Redux/Contact/selector.js","components/AuthForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nexport const Form = styled.form`\n  padding: 20px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n\n  margin-top: 20px;\n\n  color: #3b3b3b;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 16px 16px;\n  border: 1px solid silver;\n  border-radius: 10px;\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  margin-top: 8px;\n\n  &:focus-within {\n    border: 2px solid #198f27a3;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 200px;\n  padding: 20px 15px;\n  margin-top: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  border: none;\n  outline: none;\n  text-transform: uppercase;\n  color: rgb(255, 255, 255);\n  background-color: #222;\n  cursor: pointer;\n  position: relative;\n  z-index: 0;\n  border-radius: 10px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  \n\n  &:before {\n    content: '';\n    background: linear-gradient(\n      45deg,\n      #ff0000,\n      #ff7300,\n      #fffb00,\n      #48ff00,\n      #00ffd5,\n      #002bff,\n      #7a00ff,\n      #ff00c8,\n      #ff0000\n    );\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    background-size: 400%;\n    z-index: -1;\n    filter: blur(5px);\n    -webkit-filter: blur(5px);\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    animation: glowing-button 20s linear infinite;\n    transition: opacity 0.3s ease-in-out;\n    border-radius: 10px;\n  }\n\n  @keyframes glowing-button {\n    0% {\n      background-position: 0 0;\n    }\n    50% {\n      background-position: 400% 0;\n    }\n    100% {\n      background-position: 0 0;\n    }\n  }\n\n  &:after {\n    z-index: -1;\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #222;\n    left: 0;\n    top: 0;\n    border-radius: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 32px;\n  color: #003306;\n`;\n\nexport const Link = styled(NavLink)`\n  color: #0043ff;\n  &:hover {\n    color: #003306;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filters;","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Input, Label } from './AuthForm.styled';\nimport { selectContacts } from 'Redux/Contact/selector';\nimport { addContact } from 'Redux/Contact/operations';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    const isExistContact = contacts.findIndex(contact => contact.name === name);\n\n    if (isExistContact !== -1) return alert(`${name} is already in contacts`);\n\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n        />\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'Redux/Contact/operations';\n\nimport { Button, Item, List, Text } from './ContactList.styled';\nimport { useEffect } from 'react';\nimport { selectContacts, selectFilter } from 'Redux/Contact/selector';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = e => {\n    dispatch(deleteContact(e.target.id));\n  };\n\n  const filteredContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  };\n\n  return (\n    <List>\n      {filteredContacts().map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            <Text>\n              {name}: <span>{number}</span>\n            </Text>\n            <Button type=\"button\" id={id} onClick={handleDelete}>\n             Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { Form, Input, Label } from 'components/AuthForm/AuthForm.styled';\nimport { filterContacts } from 'Redux/Contact/FilterSlice';\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = e => {\n    dispatch(filterContacts                       (e.target.value));\n  };\n\n  return (\n    <Form>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact name\"\n          onChange={onFilter}\n        />\n      </Label>\n    </Form>\n  );\n};\n\nexport default Filter;\n","import { Container, Title } from 'components/AuthForm/AuthForm.styled';\nimport ContactForm from 'components/AuthForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <Container>\n      <Title>Your TeleSphere</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Container","styled","Form","Label","Input","Button","Title","Link","NavLink","selectContacts","state","contacts","items","selectFilter","filters","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","name","value","number","findIndex","contact","alert","addContact","reset","type","pattern","title","required","placeholder","filterValue","useEffect","fetchContacts","handleDelete","deleteContact","id","filter","toLowerCase","includes","map","onClick","onChange","filterContacts"],"sourceRoot":""}