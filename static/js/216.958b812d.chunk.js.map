{"version":3,"file":"static/js/216.958b812d.chunk.js","mappings":"6WAGaA,EAAYC,EAAAA,GAAAA,IAAH,qIAQTC,EAAOD,EAAAA,GAAAA,KAAH,+HAQJE,EAAQF,EAAAA,GAAAA,MAAH,qJAWLG,EAAQH,EAAAA,GAAAA,MAAH,4WAgBLI,EAASJ,EAAAA,GAAAA,OAAH,o5CA2ENK,EAAQL,EAAAA,GAAAA,GAAH,gEAKLM,GAAON,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,iF,+GCxHJQ,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAV,IAgBpC,OACE,gCACGH,IAAc,yBAAK,iBACpB,UAAC,KAAD,CAAMI,aAAa,MAAMC,SAjBR,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cAEjBX,GACEY,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAIrCL,EAAKO,OACN,EAKG,WACE,UAAC,KAAD,WAAO,SAEL,SAAC,KAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,mBACZC,UAAQ,EACRf,aAAa,YAGjB,UAAC,KAAD,WAAO,YAEL,SAAC,KAAD,CACEY,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,UAAQ,EACRf,aAAa,YAGjB,SAAC,KAAD,CAAQY,KAAK,SAAb,SAAsB,gBAI7B,ECrCC,EAZgB,WACd,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAO,YACP,SAACnB,EAAD,KACA,eAAGuB,UAAU,WAAb,UAAwB,2BACC,SAAC,KAAD,CAAMC,GAAG,YAAT,SAAqB,iBAInD,C","sources":["components/AuthForm/AuthForm.styled.js","components/AuthForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nexport const Form = styled.form`\n  padding: 20px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n\n  margin-top: 20px;\n\n  color: #3b3b3b;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 16px 16px;\n  border: 1px solid silver;\n  border-radius: 10px;\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  margin-top: 8px;\n\n  &:focus-within {\n    border: 2px solid #198f27a3;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 200px;\n  padding: 20px 15px;\n  margin-top: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  border: none;\n  outline: none;\n  text-transform: uppercase;\n  color: rgb(255, 255, 255);\n  background-color: #222;\n  cursor: pointer;\n  position: relative;\n  z-index: 0;\n  border-radius: 10px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  \n\n  &:before {\n    content: '';\n    background: linear-gradient(\n      45deg,\n      #ff0000,\n      #ff7300,\n      #fffb00,\n      #48ff00,\n      #00ffd5,\n      #002bff,\n      #7a00ff,\n      #ff00c8,\n      #ff0000\n    );\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    background-size: 400%;\n    z-index: -1;\n    filter: blur(5px);\n    -webkit-filter: blur(5px);\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    animation: glowing-button 20s linear infinite;\n    transition: opacity 0.3s ease-in-out;\n    border-radius: 10px;\n  }\n\n  @keyframes glowing-button {\n    0% {\n      background-position: 0 0;\n    }\n    50% {\n      background-position: 400% 0;\n    }\n    100% {\n      background-position: 0 0;\n    }\n  }\n\n  &:after {\n    z-index: -1;\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #222;\n    left: 0;\n    top: 0;\n    border-radius: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 32px;\n  color: #003306;\n`;\n\nexport const Link = styled(NavLink)`\n  color: #0043ff;\n  &:hover {\n    color: #003306;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\n\nimport { Button, Form, Input, Label } from './AuthForm.styled';\nimport { logIn } from 'Redux/Auth/operations';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const errorLogin = useSelector(state => state.error);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <>\n      {errorLogin && <div>Error login</div>}\n      <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Label>\n          Email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            required\n            autoComplete=\"off\"\n          />\n        </Label>\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            required\n            autoComplete=\"off\"\n          />\n        </Label>\n        <Button type=\"submit\">Log In</Button>\n      </Form>\n    </>\n  );\n};\n","import { Container, Link, Title } from \"components/AuthForm/AuthForm.styled\";\nimport { LoginForm } from \"components/AuthForm/LoginForm\";\n\nconst LoginPage = () => {\n    return (\n      <Container>\n        <Title>Log In</Title>\n        <LoginForm />\n        <p className=\"TextAuth\">\n          Don't have an account? <Link to=\"/register\">Sign up</Link>\n        </p>\n      </Container>\n    );\n  };\n  \n  export default LoginPage;"],"names":["Container","styled","Form","Label","Input","Button","Title","Link","NavLink","LoginForm","dispatch","useDispatch","errorLogin","useSelector","state","error","autoComplete","onSubmit","evt","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","type","name","placeholder","required","className","to"],"sourceRoot":""}